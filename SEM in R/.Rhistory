style A fill:#FFF, stroke:#333, stroke-width:4px
style B fill:#9AA, stroke:#9AA, stroke-width:2px
style B1 fill:#879, stroke:#333, stroke-width:1px
style C fill:#ADF, stroke:#333, stroke-width:2px
style E fill:#9C2, stroke:#9C2, stroke-width:2px
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
style A fill:#FFF, stroke:#333, stroke-width:4px
style B fill:#9AA, stroke:#9AA, stroke-width:2px
style B1 fill:#879, stroke:#333, stroke-width:1px
style C fill:#ADF, stroke:#333, stroke-width:2px
style E fill:#9C2, stroke:#9C2, stroke-width:2px
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
style A fill:#FFF, stroke:#333, stroke-width:4px
style B fill:#9AA, stroke:#9AA, stroke-width:2px
style B1 fill:#879, stroke:#333, stroke-width:1px
style C fill:#ADF, stroke:#333, stroke-width:2px
style E fill:#9C2, stroke:#9C2, stroke-width:2px
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1"}
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1")
mermaid("
graph LR
A((Salinity))
A-->B<Barnacles>
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
")
mermaid("
graph LR
A[Age]
B[Class]
A-->B")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A-->C
B-->C
")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A--C
B-->C
")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A->C
B-->C
")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A->-C
B-->C
")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A-->C
B-->C
")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A-->C
B-->C
A-->B
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
")
# Testing
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A-->C
B-->C
")
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
D==>F
")
# Testing
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
E==>F
D==>F
")
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
mermaid("
graph LR
A((EM Trouble)) -- 0.1 --> F[Adult Incarceration]
B((Trauma)) -- 0.2 --> F[Adult Incarceration]
C((HS Trouble)) -- 0.3 --> F[Adult Incarceration]
D((Delinquency)) -- 0.4 --> F[Adult Incarceration]
E((Crime)) -- 0.5 --> F[Adult Incarceration]
A -- 0.60 --> C
B -- 0.70 --> C
D -- 0.80 --> C
")
# Testing
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
# Testing 2
grViz("
digraph boxes_and_circles{
# A graph statement
graph [overlap = true, fontsize = 10]")
grViz("
digraph boxes_and_circles{
# A graph statement
graph [overlap = true, fontsize = 10]")
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3->8
}
")
# Testing 2
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3==>8
}
")
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3=>8
}
")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = crimson, label='Polynomial Regression Model'
/*, rankdir='LR', style=filled, fillcolor = blue*/
]
subgraph cluster1 {
node [shape = diamond,
color = black]
xi
node [shape = circle,
style = filled,
fillcolor = grey]
ti
edge [color = black]
xi -> ti
label='N'
}
node [shape = circle]
w
node [shape = diamond,
color = black,
label = '&alpha;']
alpha
node [shape = diamond,
color = black,
label = '&sigma;&#x00B2;']
sigma
edge [color = black]
alpha -> w
w -> ti
sigma -> ti
}
",
engine = "dot")
# Testing 2
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = crimson, label='Polynomial Regression Model'
/*, rankdir='LR', style=filled, fillcolor = blue*/
]
subgraph cluster1 {
node [shape = diamond,
color = black]
xi
node [shape = circle,
style = filled,
fillcolor = grey]
ti
edge [color = black]
xi -> ti
label='N'
}
node [shape = circle,
color = 'red']
w
node [shape = diamond,
color = black,
label = '&alpha;']
alpha
node [shape = diamond,
color = black,
label = '&sigma;&#x00B2;']
sigma
edge [color = black]
alpha -> w
w -> ti
sigma -> ti
}
",
engine = "dot")
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
# Testing
mermaid("
digraph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
install.packages(c("carData", "ggraph", "sem", "sp", "tidyr"))
install.packages(c("ggraph", "haven", "labelled", "rversions", "sem", "sp", "tidyr"))
install.packages(c("dplyr", "ggplot2", "httpuv", "pkgload", "StanHeaders"))
install.packages(c("dplyr", "haven", "pkgload"))
install.packages(c("httpuv", "later", "rms", "SQUAREM", "vctrs"))
library(readr)
install.packages(c("epiR", "lubridate", "mvtnorm", "partykit", "promises", "RcppArmadillo", "sf", "StanHeaders", "survival", "units"))
setwd("C:/Users/miqui/OneDrive/R Projects/SEM in R")
require(lavaan)
require(semPlot)
library(foreign)
library(tidyverse)
library(tidygraph)
library(ggraph)
library(dplyr)
db = file.choose()
dataset = read.spss(db, to.data.frame=TRUE)
attach(dataset)
dataset$gender <- as.numeric(dataset$gender)
table(gender) #3,393 0's and 3,342 1's
table(race)
# Creating new variables
#  set up a gender-race group variable called GR
dataset <- dataset %>%
mutate(GR = case_when(
gender == 0 & race == 1 ~ "01",
gender == 0 & race == 2 ~ "02",
gender == 0 & race == 3 ~ "03",
gender == 0 & race == 4 ~ "04",
gender == 1 & race == 1 ~ "11",
gender == 1 & race == 2 ~ "12",
gender == 1 & race == 3 ~ "13",
gender == 1 & race == 4 ~ "14"
))
table(dataset$GR)
# Dichotomize adult and juvenile incarceration and suspensions
dataset <- dataset %>%
mutate(Aincarceration = case_when(
adultincarceration == 0 ~ "0",
adultincarceration != 0 ~ "1"))
dataset <- dataset %>%
mutate(Jincarceration = case_when(
juvenileincarceration == 0 ~ "0",
juvenileincarceration != 0 ~ "1"))
dataset <- dataset %>%
mutate(ESuspend = case_when(
elementarysuspend == 0 ~ "0",
elementarysuspend >= 1 ~ "1"))
dataset <- dataset %>%
mutate(MSuspend = case_when(
middlesuspend == 0 ~ "0",
middlesuspend >= 1 ~ "1"
))
dataset <- dataset %>%
mutate(HSuspend = case_when(
highsuspend == 0 ~ "0",
highsuspend >= 1 ~ "1"))
# Create an interaction variable
dataset <- dataset %>%
mutate(blackhispanicinteraction = black*hispanic)
any(blackhispanicinteraction)
# Add new variables to dataset
attach(dataset)
variables <- as.data.frame(names(dataset))
females <- glm(
Aincarceration ~ jail + victim + gunshotless12 + gunshot12to18 + unemployment + homeless +
poverty1997 + poverty1998 + poverty1999 + poverty2000 + poverty2001 + poverty2002 +
death + hospitalization + divorce + juveniledestroyproperty + juvenilestealless +
juvenilestealmore + juvenileotherproperty + juvenileattack + juvenileselldrugs +
adultgun + adultdestroyproperty + adultstealless + adultstealmore + adultotherproperty +
adultattack + adultselldrugs + elementarysuspend + middlesuspend + elementmiddledropout +
highsuspend + highdropout + Jincarceration + highgrade15 + gender + black + hispanic + age +
twoparenthome + SES + citizenship + geography97,
data = filter(dataset, gender==0),
family = binomial(link = "logit"))
dataset$Aincarceration <- as.integer(dataset$Aincarceration)
table(Aincarceration)
females <- glm(
Aincarceration ~ jail + victim + gunshotless12 + gunshot12to18 + unemployment + homeless +
poverty1997 + poverty1998 + poverty1999 + poverty2000 + poverty2001 + poverty2002 +
death + hospitalization + divorce + juveniledestroyproperty + juvenilestealless +
juvenilestealmore + juvenileotherproperty + juvenileattack + juvenileselldrugs +
adultgun + adultdestroyproperty + adultstealless + adultstealmore + adultotherproperty +
adultattack + adultselldrugs + elementarysuspend + middlesuspend + elementmiddledropout +
highsuspend + highdropout + Jincarceration + highgrade15 + gender + black + hispanic + age +
twoparenthome + SES + citizenship + geography97,
data = filter(dataset, gender==0),
family = binomial(link = "logit"))
summary(females)
table(GR)
table(GR, highgrade15)
HF <- filter(dataset, GR == "03")
table(HF$hispanic)
table(HF$Jincarceration)
model <- glm(
Aincarceration ~ jail + victim + gunshotless12 + gunshot12to18 + unemployment + homeless +
poverty1997 + poverty1998 + poverty1999 + poverty2000 + poverty2001 + poverty2002 +
death + hospitalization + divorce + juveniledestroyproperty + juvenilestealless +
juvenilestealmore + juvenileotherproperty + juvenileattack + juvenileselldrugs +
adultgun + adultdestroyproperty + adultstealless + adultstealmore + adultotherproperty +
adultattack + adultselldrugs + elementarysuspend + middlesuspend + elementmiddledropout +
highsuspend + highdropout + Jincarceration + highgrade15 + gender + black + hispanic + age +
twoparenthome + SES + citizenship + geography97,
data = HF,
family = binomial(link = "logit"))
