summarise(Medicaid = mean(AmtPaidM),
Board = mean(AmtPaidB))
ServicesSummary %>%
group_by(Category) %>%
summarise(Medicaid = mean(AmtPaidM),
Board = mean(AmtPaidB))
write.xlsx(ServicesSummary, sheetName = "ADAMHS", file = "ADAMHS.xlsx", col.names = TRUE, row.names = FALSE)
install.packages(c("httpuv", "questionr"))
setwd("C:/Users/miqui/OneDrive/R Projects/SEM in R")
library(readxl)
library(dplyr)
library(lubridate)
members <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Members")
View(members)
PayerSpans <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "PayerSpans", col_types = c("numeric",
"date", "date", "text", "text", "text",
"numeric", "text"))
View(PayerSpans)
Services <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Services", col_types = c("numeric",
"text", "numeric", "text", "text",
"text", "text", "text", "text", "numeric",
"text", "numeric", "text", "date",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text"))
View(Services)
setwd("C:/Users/miqui/OneDrive/R Projects/SEM in R")
library(readxl)
library(dplyr)
library(lubridate)
members <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Members")
View(members)
PayerSpans <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "PayerSpans", col_types = c("numeric",
"date", "date", "text", "text", "text",
"numeric", "text"))
View(PayerSpans)
Services <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Services", col_types = c("numeric",
"text", "numeric", "text", "text",
"text", "text", "text", "text", "numeric",
"text", "numeric", "text", "date",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text"))
View(Services)
library(leaflet)
install.packages(c("dbplyr", "ellipse", "httpuv", "StanHeaders"))
names(members)
rm(list = ls())
library(lubridate)
members <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Members")
setwd("C:/Users/miqui/OneDrive/R Projects/SEM in R")
library(readxl)
library(dplyr)
library(lubridate)
members <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Members")
names(members)
View(members)
attach(members)
table(Gender)
View(members)
members %>%
select(Address ! is.na())
members %>%
select(Address != is.na())
members %>%
filter(!is.na(Address))
test <- members %>%
filter(!is.na(Address))
members <- members %>%
filter(!is.na(Address))
rm(test)
table(is.na(Address))
# Select only members that have a valid address:
table(is.na(Address))
attach(members)
View(members)
names(members)
test <- members %>%
select(IndividualId, Address, ZipCode, Gender, Race, Ethnicity, MaritalStatus)
View(test)
members <- members %>%
select(IndividualId, Address, ZipCode, Gender, Race, Ethnicity, MaritalStatus)
rm(test)
rm(members)
library(readxl)
library(tidyverse)
library(tidyr)
library(leaflet)
library(htmltools)
library(ggmap)
cities <- read_excel("Population by Prefecture.xlsx",
sheet = "Cities", col_types = c("text",
"text", "text", "text", "numeric",
"numeric", "numeric", "date", "numeric",
"numeric"))
View(cities)
setwd("C:/Users/miqui/OneDrive/Japan Project")
prefec <- read_excel("Population by Prefecture.xlsx",
sheet = "Prefecture")
View(prefec)
# Set the wd and import the necessary libraries
setwd("C:/Users/miqui/OneDrive/Japan Project")
library(readxl)
library(tidyverse)
library(tidyr)
library(leaflet)
library(htmltools)
library(ggmap)
prefec <- read_excel("Population by Prefecture.xlsx",
sheet = "Prefecture")
View(prefec)
towns <- read_excel("Population by Prefecture.xlsx",
sheet = "Towns")
View(towns)
cities <- read_excel("Population by Prefecture.xlsx",
sheet = "Cities", col_types = c("text",
"text", "text", "text", "numeric",
"numeric", "numeric", "date", "numeric",
"numeric"))
View(cities)
# Build the map
names(cities)
names(providers)
# Add custom header as wanted
cities <- cities %>%
mutate(popup = str_c("<strong>", City, "</strong>",
"<br/>",
"Density: ", Density,
"<br/>",
"Founded: ", Founded))
View(cities)
leaflet(data = cities) %>%
addCircles(popup = ~popup, color = "red", radius = ~sqrt(Density)) %>%
addProviderTiles("CartoDB.DarkMatter")
leaflet(data = cities) %>%
addCircles(popup = ~popup, color = "red", radius = ~sqrt(Density)) %>%
addProviderTiles("CartoDB.DarkMatter")
View(cities)
leaflet(data = towns) %>%
addCircles(color = "red", radius = ~sqrt(Area)) %>%
addProviderTiles("CartoDB.DarkMatter")
leaflet(data = towns) %>%
addCircles(color = "red", radius = ~sqrt(Area), popup = ~popup) %>%
addProviderTiles("CartoDB.DarkMatter")
rm(list = ls())
setwd("C:/Users/miqui/OneDrive/R Projects/SEM in R")
library(readxl)
library(dplyr)
library(lubridate)
members <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Members")
library(leaflet)
setwd("C:/Users/miqui/OneDrive/R Projects/SEM in R")
library(readxl)
library(dplyr)
library(lubridate)
library(leaflet)
members <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Members")
names(members)
attach(members)
# Select only members that have a valid address:
table(is.na(Address))
members <- members %>%
filter(!is.na(Address))
attach(members)
members <- members %>%
select(IndividualId, Address, ZipCode, Gender, Race, Ethnicity, MaritalStatus)
View(members)
View(members)
# Set the wd and import the necessary libraries
setwd("C:/Users/miqui/OneDrive/Japan Project")
cities <- read_excel("Population by Prefecture.xlsx",
sheet = "Cities", col_types = c("text",
"text", "text", "text", "numeric",
"numeric", "numeric", "date", "numeric",
"numeric"))
View(cities)
cities <- cities %>%
mutate(popup = str_c("<strong>", City, "</strong>",
"<br/>",
"Density: ", Density,
"<br/>",
"Founded: ", Founded))
leaflet(data = cities) %>%
addMarkers(color = "red", radius = ~sqrt(Area)) %>%
addProviderTiles("CartoDB.DarkMatter")
leaflet(data = cities) %>%
addMarkers() %>%
addProviderTiles("CartoDB.DarkMatter")
leaflet(data = cities) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("CartoDB.DarkMatter")
paste("Hello" + "Again")
View(cities)
paste("Hello", "There")
paste("Hello", "There", "Friend")
test <- members %>%
mutate(FullAddress = paste(Address, "OHIO"))
View(test)
table(is.na(ZipCode))
test <- members %>%
mutate(FullAddress = paste(Address, "OHIO", ZipCode))
rm(test)
View(members)
members <- members %>%
mutate(FullAddress = paste(Address, "OHIO", ZipCode))
View(cities)
members <- members %>%
mutate(FullAddress = paste(Address, ",", "OHIO", ",", ZipCode))
register_google(key = "AIzaSyDF-reX5JzcsAF-yXjZlBpaeIxkgoubdH8")
test = members[:5,]
test <- members[1:5, ]
View(test)
data <- geocode(location = test$FullAddress, output = "latlona", source = "google")
View(data)
data <- cbind(members, data)
data <- cbind(test, data)
View(data)
names(data)
data <- data %>%
mutate(popup = str_c("<strong>", Address, "</strong>",
"<br/>",
"Gender: ", Gender,
"<br/>",
"Race: ", Race))
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("CartoDB.DarkMatter")
data <- data %>%
mutate(popup = str_c("<strong>", Address, "</strong>",
"<br/>",
"ID:", IndividualId,
"<br/>",
"Gender: ", Gender,
"<br/>",
"Race: ", Race))
View(data)
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("CartoDB.DarkMatter")
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("Esri.DeLorme")
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("Jawg.Matrix")
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("CyclOSM")
names(providers)
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("NLS")
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("Wikimedia")
View(members)
data <- data %>%
mutate(popup = str_c("<strong>", Address, "</strong>",
"<br/>",
"ID:", IndividualId,
"<br/>",
"Gender: ", Gender,
"<br/>",
"Race: ", Race,
"<br/>",
"Marital Status:", MaritalStatus))
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("Wikimedia")
data <- data %>%
mutate(popup = str_c("<strong>", Address, "</strong>",
"<br/>",
"ID: ", IndividualId,
"<br/>",
"Gender: ", Gender,
"<br/>",
"Race: ", Race,
"<br/>",
"Marital Status: ", MaritalStatus))
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("Wikimedia")
members <- members %>%
select(IndividualId, Address, ZipCode, Gender, Race, Ethnicity, MaritalStatus, Birthdate)
setwd("C:/Users/miqui/OneDrive/R Projects/SEM in R")
library(readxl)
library(dplyr)
library(leaflet)
members <- read_excel("ADAMHSCCNeedsAssessmentData20200522.xlsx",
sheet = "Members")
names(members)
attach(members)
members <- members %>%
filter(!is.na(Address))
View(members)
members <- members %>%
select(IndividualId, Address, ZipCode, Gender, Race, Ethnicity, MaritalStatus, Birthdate)
attach(members)
View(members)
members <- members %>%
mutate(FullAddress = paste(Address, ",", "OHIO", ",", ZipCode))
test <- members[1:5, ]
View(test)
register_google(key = "AIzaSyDF-reX5JzcsAF-yXjZlBpaeIxkgoubdH8")
data <- geocode(location = test$FullAddress, output = "latlona", source = "google")
data <- cbind(test, data)
data <- data %>%
mutate(popup = str_c("<strong>", Address, "</strong>",
"<br/>",
"ID: ", IndividualId,
"<br/>",
"Gender: ", Gender,
"<br/>",
"Race: ", Race,
"<br/>",
"Marital Status: ", MaritalStatus))
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("Wikimedia")
data <- data %>%
mutate(popup = str_c("<strong>", Address, "</strong>",
"<br/>",
"ID: ", IndividualId,
"<br/>",
"Gender: ", Gender,
"<br/>",
"Race: ", Race,
"<br/>",
"Marital Status: ", MaritalStatus,
"<br/>",
"Birthdate: ", Birthdate))
leaflet(data = data) %>%
addMarkers(popup = ~popup) %>%
addProviderTiles("Wikimedia")
leaflet(data = data) %>%
addMarkers(popup = ~popup)
library(tidyverse)
library(leaflet)
library(stringr)
library(sf)
library(here)
library(widgetframe)
library(tidyverse)
library(leaflet)
library(stringr)
library(sf)
install.packages("sf")
install.packages(c("here", "widgetframe"))
library(tidyverse)
library(leaflet)
library(stringr)
library(sf)
library(here)
library(widgetframe)
options(digits = 3)
set.seed(1234)
theme_set(theme_minimal())
rm(list = ls())
setwd("C:/Users/miqui/OneDrive/R Projects/Chicago Crime")
library(readxl)
crimes <- read_excel("Chicago Crimes 2017.xlsx",
sheet = "Crimes_-_2017", col_types = c("numeric",
"text", "date", "text", "text", "text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "text", "numeric", "numeric",
"numeric", "date", "numeric", "numeric",
"text"))
View(crimes)
library(dplyr)
names(crimes)
attach(crimes)
View(crimes)
ls
ls()
st_read(system.file("geo_export_a8dd59e4-12b3-42ee-a677-22266f55e6f2.shp", package = "sf"))
getwd()
list.files()
st_read(system.file("geo_export_a8dd59e4-12b3-42ee-a677-22266f55e6f2.shp", package = "sf"))
list.files()
file_name <- system.file("Chicago Shape File.shp", package = "sf")
st_read(file_name)
read_sf(dsn=".", layer="SHAPEFILE")
read_sf(dsn="Chicago Shape File.shp", layer="SHAPEFILE")
read_sf(dsn="Chicago Shape File.shp")
file.exists("Chicago Shape File.shp")
library(sf)
st_read(dsn = "C:\Users\miqui\OneDrive\R Projects\Chicago Crime\Chicago Shape File.shp")
st_read(dsn = "C:/Users/miqui/OneDrive/R Projects/Chicago Crime/Chicago Shape File.shp")
st_read(dsn = "C:/Users/miqui/OneDrive/R Projects/Chicago Crime/Chicago Shape File.shp")
st_drivers()
st_read(dsn = "C:/Users/miqui/OneDrive/R Projects/Chicago Crime/Boundaries.geojson")
rm(file_name)
areas <- st_read(dsn = "C:/Users/miqui/OneDrive/R Projects/Chicago Crime/Boundaries.geojson")
plot(areas)
View(areas)
View(areas[[10]][[1]])
View(areas[[10]][[1]])
areas <- st_read(dsn = "C:/Users/miqui/OneDrive/R Projects/Chicago Crime/Boundaries.geojson") %>%
mutate(community = str_to_title(community))
plot(areas)
(areas_homicides <- areas %>%
select(community, area_numbe) %>%
mutate(area_numbe = as.numeric(as.character(area_numbe))) %>%
left_join(homicides %>%
count(`Community Area`),
by = c("area_numbe" = "Community Area")) %>%
mutate(n = ifelse(is.na(n), 0, n)))
homicides %>%
mutate(popup = str_c(Date,
Block,
str_c("Location type:", `Location Description`,
sep = " "),
sep = "<br/>")) %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup = ~popup) %>%
frameWidget()
(homicides <- crimes %>%
filter(`Primary Type` == "HOMICIDE"))
homicides %>%
mutate(popup = str_c(Date,
Block,
str_c("Location type:", `Location Description`,
sep = " "),
sep = "<br/>")) %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup = ~popup) %>%
frameWidget()
areas_homicides <- areas %>%
select(community, area_numbe) %>%
mutate(area_numbe = as.numeric(as.character(area_numbe))) %>%
left_join(homicides %>%
count(`Community Area`),
by = c("area_numbe" = "Community Area")) %>%
mutate(n = ifelse(is.na(n), 0, n))
View(areas_homicides)
View(areas_homicides)
library(ggplot2)
ggplot(data = areas) +
geom_sf()
View(areas)
areas_homicides %>%
mutate(popup = str_c("<strong>", community, "</strong>",
"<br/>",
"Reported homicides in 2017: ", n) %>%
map(htmltools::HTML)) %>%
leaflet() %>%
addTiles() %>%
addPolygons(label = ~popup,
fillColor = ~pal(n),
color = "#444444",
weight = 1,
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
frameWidget()
bins <- c(0, 10, 20, 30, 40, 50, Inf)
pal <- colorBin("YlOrRd", domain = areas_homicides$n, bins = bins)
areas_homicides %>%
mutate(popup = str_c("<strong>", community, "</strong>",
"<br/>",
"Reported homicides in 2017: ", n) %>%
map(htmltools::HTML)) %>%
leaflet() %>%
addTiles() %>%
addPolygons(label = ~popup,
fillColor = ~pal(n),
color = "#444444",
weight = 1,
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
frameWidget()
View(areas_homicides)
homicides %>%
mutate(popup = str_c(Date,
Block,
str_c("Location type:", `Location Description`,
sep = " "),
sep = "<br/>")) %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup = ~popup) %>%
frameWidget()
View(homicides)
View(areas)
