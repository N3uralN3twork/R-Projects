A[Age]
B((Religiosity))
C(Happiness)
A->-C
B-->C
")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A-->C
B-->C
")
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A-->C
B-->C
A-->B
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
")
mermaid("
graph LR
A((Salinity))
A-->B(Barnacles)
B-.->|-0.10|B1{Mussels}
A-- 0.30 -->B1
C[Air Temp]
C-->B
C-.->E(Macroalgae)
E-->B1
C== 0.89 ==>B1
")
# Testing
mermaid("
graph LR
A[Age]
B((Religiosity))
C(Happiness)
A-->C
B-->C
")
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
D==>F
")
# Testing
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
E==>F
D==>F
")
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
mermaid("
graph LR
A((EM Trouble)) -- 0.1 --> F[Adult Incarceration]
B((Trauma)) -- 0.2 --> F[Adult Incarceration]
C((HS Trouble)) -- 0.3 --> F[Adult Incarceration]
D((Delinquency)) -- 0.4 --> F[Adult Incarceration]
E((Crime)) -- 0.5 --> F[Adult Incarceration]
A -- 0.60 --> C
B -- 0.70 --> C
D -- 0.80 --> C
")
# Testing
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
# Testing 2
grViz("
digraph boxes_and_circles{
# A graph statement
graph [overlap = true, fontsize = 10]")
grViz("
digraph boxes_and_circles{
# A graph statement
graph [overlap = true, fontsize = 10]")
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3->8
}
")
# Testing 2
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3==>8
}
")
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3=>8
}
")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = crimson, label='Polynomial Regression Model'
/*, rankdir='LR', style=filled, fillcolor = blue*/
]
subgraph cluster1 {
node [shape = diamond,
color = black]
xi
node [shape = circle,
style = filled,
fillcolor = grey]
ti
edge [color = black]
xi -> ti
label='N'
}
node [shape = circle]
w
node [shape = diamond,
color = black,
label = '&alpha;']
alpha
node [shape = diamond,
color = black,
label = '&sigma;&#x00B2;']
sigma
edge [color = black]
alpha -> w
w -> ti
sigma -> ti
}
",
engine = "dot")
# Testing 2
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = crimson, label='Polynomial Regression Model'
/*, rankdir='LR', style=filled, fillcolor = blue*/
]
subgraph cluster1 {
node [shape = diamond,
color = black]
xi
node [shape = circle,
style = filled,
fillcolor = grey]
ti
edge [color = black]
xi -> ti
label='N'
}
node [shape = circle,
color = 'red']
w
node [shape = diamond,
color = black,
label = '&alpha;']
alpha
node [shape = diamond,
color = black,
label = '&sigma;&#x00B2;']
sigma
edge [color = black]
alpha -> w
w -> ti
sigma -> ti
}
",
engine = "dot")
mermaid("
graph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
# Testing
mermaid("
digraph LR
A[Gender]
B[Age]
C[Height]
D[Income]
E(Demographics)
F((Happiness))
A-->E
B-->E
C-->E
D-->E
E==>F
D==>F
")
install.packages(c("carData", "ggraph", "sem", "sp", "tidyr"))
install.packages(c("ggraph", "haven", "labelled", "rversions", "sem", "sp", "tidyr"))
install.packages(c("dplyr", "ggplot2", "httpuv", "pkgload", "StanHeaders"))
install.packages(c("dplyr", "haven", "pkgload"))
install.packages(c("httpuv", "later", "rms", "SQUAREM", "vctrs"))
library(readr)
install.packages(c("epiR", "lubridate", "mvtnorm", "partykit", "promises", "RcppArmadillo", "sf", "StanHeaders", "survival", "units"))
library(readr)
wave1 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-V21/ICPSR_21600/DS0001/21600-0001-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(wave1)
library(readr)
wave2 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-Wave2/ICPSR_21600/DS0005/21600-0005-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(wave2)
table(unique(wave1$AID))
View(wave1)
table(is.na(wave1$AID))
library(dplyr)
install.packages(c("backports", "glmnet", "htmltools", "labelled", "sf", "survival", "units"))
library(dplyr)
library(readr)
wave1 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-V21/ICPSR_21600/DS0001/21600-0001-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
wave2 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-Wave2/ICPSR_21600/DS0005/21600-0005-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
wave1 <- as.data.frame(wave1)
wave2 <- as.data.frame(wave2)
waves <- merge(wave1, wave2, by="AID")
View(wave2)
View(waves)
2794+2532
View(wave1)
library(lubridate)
idate = mdy(wave1$IMONTH,wave1$IDAY,wave1$IYEAR)
ymd(c(1997,12,20))
ymd("09-09-09")
x <- c(20090101, "2009-01-02", "2009 01 03", "2009-1-4",
"2009-1, 5", "Created on 2009 1 6", "200901 !!! 07")
ymd(x)
View(waves)
table(waves$IYEAR)
library(dplyr)
View(waves)
rm(wave1)
rm(wave2)
waves <- waves %>%
select(AID, IMONTH, IDAY, IYEAR)
View(waves)
waves <- waves %>%
mutate(Year = IYEAR + 1990)
waves <- waves %>%
mutate(Year = IYEAR + 1900)
attach(waves)
names(waves)
paste(IMONTH, IDAY, IYEAR)
waves <- waves %>%
mutate(Date = paste(IMONTH, IDAY, IYEAR))
mdy(waves$Date)
waves <- waves %>%
mutate(Date = mdy(paste(IMONTH, IDAY, IYEAR)))
attach(waves)
table(Date)
rm(waves)
library(readr)
wave1 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-V21/ICPSR_21600/DS0001/21600-0001-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
wave2 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-Wave2/ICPSR_21600/DS0005/21600-0005-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
wave1 <- as.data.frame(wave1)
wave2 <- as.data.frame(wave2)
waves <- merge(wave1, wave2, by="AID")
waves <- waves %>%
select(AID, IMONTH, IDAY, IYEAR)
waves <- waves %>%
mutate(IDate = mdy(paste(IMONTH, IDAY, IYEAR)))
waves <- merge(wave1, wave2, by="AID")
waves <- waves %>%
select(AID, IMONTH, IDAY, IYEAR, H1GI1M, H1GI1Y)
attach(waves)
waves <- waves %>%
mutate(BDate = mdy(paste(H1GI1M, 15, H1GI1Y)))
waves <- waves %>%
mutate(BDate = mdy(paste(H1GI1M, "15", H1GI1Y)))
waves <- waves %>%
mutate(BDate = mdy(paste(H1GI1M, 15, H1GI1Y)))
waves <- waves %>%
mutate(IDate = mdy(paste(IMONTH, IDAY, IYEAR)))
waves <- waves %>%
mutate(Age = (IDate - BDate))
attach(waves)
str(waves)
waves <- waves %>%
mutate(Age = years(IDate - BDate))
waves <- waves %>% select(-Age)
test <- waves %>%
mutate(Age = year(IDate - BDate))
test <- waves %>%
mutate(Age = year(IDate - BDate))
test <- waves %>%
mutate(Age = as.numeric((IDate - BDate)/365.25))
View(test)
rm(test)
waves <- waves %>%
mutate(Age = as.numeric((IDate - BDate)/365.25))
View(waves)
summary(waves$Age)
rm(waves1)
rm(wave2)
rm(wave1)
install.packages(c("backports", "htmltools", "rmarkdown", "rstatix"))
setwd("C:/Users/miqui/OneDrive/R Projects/ADD Health")
setwd("C:/Users/miqui/OneDrive/R Projects/ADD Health")
library(dplyr)
library(lubridate)
library(readr)
wave1 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-V21/ICPSR_21600/DS0001/21600-0001-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
wave2 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-Wave2/ICPSR_21600/DS0005/21600-0005-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
wave1 <- as.data.frame(wave1)
wave2 <- as.data.frame(wave2)
table(is.na(wave1$AID))
waves <- merge(wave1, wave2, by="AID")
waves <- waves %>%
select(AID, IMONTH, IDAY, IYEAR, H1GI1M, H1GI1Y,
H1GI4, H1GI6A, H1GI6B, H1GI6C, H1GI6D, H1Gi6E)
waves <- waves %>%
select(AID, IMONTH, IDAY, IYEAR, H1GI1M, H1GI1Y,
H1GI4, H1GI6A, H1GI6B, H1GI6C, H1GI6D, H1GI6E)
waves <- waves %>%
mutate(IDate = mdy(paste(IMONTH, IDAY, IYEAR)))
waves <- waves %>%
mutate(BDate = mdy(paste(H1GI1M, 15, H1GI1Y)))
waves <- waves %>%
mutate(Age = as.numeric((IDate - BDate)/365.25))
summary(waves$Age)
rm(wwave1)
rm(wave1)
rm(wave2)
View(waves)
waves <- waves %>%
mutate(Race = case_when(
H1GI4 == 1 ~ "Hispanic",
H1GI6B == 1 ~ "Black",
H1GI6D == 1 ~ "Asian",
H1GI6C == 1 ~ "NativeAmerican",
H1GI6E == 1 ~ "Other",
H1GI6A == 1 ~ "White"))
table(waves$Race)
View(waves)
library(readr)
wave3 <- read_delim("Wave3.tsv", "\t", escape_double = FALSE,
trim_ws = TRUE)
View(wave3)
wave3 <- as.data.frame(wave3)
setwd("C:/Users/miqui/OneDrive/R Projects/ADD Health")
library(dplyr)
library(lubridate)
library(readr)
wave1 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-V21/ICPSR_21600/DS0001/21600-0001-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(wave1)
library(readr)
wave2 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-Wave2/ICPSR_21600/DS0005/21600-0005-Data.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(wave2)
library(readr)
wave3 <- read_delim("Wave3.tsv", "\t", escape_double = FALSE,
trim_ws = TRUE)
View(wave3)
wave1 <- as.data.frame(wave1)
wave2 <- as.data.frame(wave2)
wave3 <- as.data.frame(wave3)
table(is.na(wave1$AID))
waves <- merge(wave1, wave2, wave3, by="AID")
View(wave3)
library(readr)
wave3 <- read_delim("Wave3.tsv", "\t", escape_double = FALSE,
trim_ws = TRUE)
View(wave3)
waves <- merge(wave1, wave2, wave3, by="AID")
waves <- merge(waves, wave3, by="AID")
rm(list = ls())
setwd("C:/Users/miqui/OneDrive/R Projects/ADD Health")
library(dplyr)
library(lubridate)
library(readr)
wave1 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-V21/ICPSR_21600/DS0001/Wave1.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(wave1)
library(readr)
wave2 <- read_delim("C:/Users/miqui/Downloads/ICPSR_21600-Wave2/ICPSR_21600/DS0005/Wave2.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(wave2)
library(readr)
wave3 <- read_delim("Wave3.tsv", "\t", escape_double = FALSE,
trim_ws = TRUE)
View(wave3)
" Turn into data-frames:"
wave1 <- as.data.frame(wave1)
wave2 <- as.data.frame(wave2)
wave3 <- as.data.frame(wave3)
table(unique(wave1$AID))
table(is.na(wave1$AID))
"Merge waves by AID:"
waves <- merge(wave1, wave2, by="AID")
waves <- merge(waves, wave3, by="AID")
library(readr)
wave2 <- read_delim("Wave2.tsv", "\t", escape_double = FALSE,
trim_ws = TRUE)
View(wave2)
library(readr)
wave1 <- read_delim("Wave1.tsv", "\t", escape_double = FALSE,
trim_ws = TRUE)
View(wave1)
wave1 <- as.data.frame(wave1)
wave2 <- as.data.frame(wave2)
wave3 <- as.data.frame(wave3)
waves <- merge(wave1, wave2, by="AID")
waves <- merge(waves, wave3, by="AID")
